{
  "name": "f_",
  "version": "0.0.1",
  "dependencies": {},
  "readme": "f_\r\n==\r\n\r\nAsynchronous operations made easy.\r\n\r\n## Dependencies\r\n* opensoars_cls\r\n* ezlog\r\n\r\n## Code example\r\n```js\r\nvar f_ = require('f_');\r\n\r\n\r\nvar Download = function (o){\r\n\to = o || {};\r\n\r\n\tfor(var key in o) this[key] = o[key];\r\n\r\n\t// required for f_ feedback of err stack\r\n\tthis.errs = [];\r\n};\r\n\r\nDownload.prototype.start = function (){\r\n\tif(!this.url) this.errs.push('no url given');\r\n\t// ... More validating could be done here\r\n\r\n\tif(this.errs.length !== 0)\r\n\t\treturn this.f_abort('err(s) @start, no reason to retry');\r\n\r\n\tthis.next();\r\n};\r\n\r\nDownload.prototype.getData = function (){\r\n\tvar self = this;\r\n\r\n\thttp.get(url, function (res){\r\n\t\tvar data='';res.on('data', function(c){ data+=c; });\r\n\r\n\t\tres.on('end', function (){\r\n\t\t\tif(data.length < 5000)\r\n\t\t\t\treturn self.retry('data.length < 5000');\r\n\r\n\t\t\tself.d.data = data;\r\n\r\n\t\t\treturn self.next();\r\n\t\t});\r\n\r\n\t}).on('error', function (){\r\n\t\treturn self.retry('http.get error');\r\n\t});\r\n};\r\n\r\nDownload.prototype.convertFile = function (){\r\n\t// ... More async operations\r\n};\r\n\r\nDownload.prototype.clean = function (){\r\n\t// ... And more async operations,\r\n\t//     to finish just do:\r\n\r\n\tthis.next();\r\n};\r\n\r\n/**\r\n * Two required arrays for f_ to work\r\n */\r\nDownload.prototype.functionFlow =  [\r\n\t'getData',\r\n\t'convertFile',\r\n\t'clean'\r\n];\r\n\r\nDownload.prototype.toReset = [ \r\n\t{ d: {} },\r\n\t{ defaultVideoId: 'NnTg4vzli5s' } \r\n];\r\n\r\n\r\n/** Augmenting Download prototype object */\r\nDownload = f_.augment(Download);\r\n\r\n\r\n/** Now let's initiate the download(s) */\r\nfor(var i = 0; i < 100; i += 1){\r\n\tvar downloadInstance = new Download({ url: 'http://someurl.com/file' + i });\r\n\tdownloadInstance.start();\r\n}\r\n\r\n```",
  "readmeFilename": "readme.md",
  "description": "f_\r ==",
  "_id": "f_@0.0.1",
  "_from": "f_@0.0.1"
}
